#!/usr/bin/env bash

set -e

RUBY_VERSION=3.1.4
RUBYGEMS_VERSION=3.3.26
LIBYAML_VERSION=0.2.5

if [ $(uname -s) == "Darwin" ]; then
  if brew --prefix openssl; then
    brew_prefix_openssl="$(brew --prefix openssl)"
    PATH="${brew_prefix_openssl}/bin:$PATH"
    with_openssl_dir="--with-openssl-dir=$brew_prefix_openssl"
  fi
fi

# Use Clang if available; the resulting Ruby is faster
if [ -x /usr/bin/clang ]; then
  export CXX=/usr/bin/clang++ CC=/usr/bin/clang
fi

openssl_version=$(openssl version)
openssl_major_version=$(echo "${openssl_version}" | cut -f2 -d\ | cut -f1 -d.)
if [ "${openssl_major_version}" == 0 ]; then
  echo "OpenSSL version 1 or greater is required."
  echo "Currently available: ${openssl_version}"
  exit 1
fi

tar xzf "yaml-${LIBYAML_VERSION}.tar.gz"
(
  set -e
  cd "yaml-${LIBYAML_VERSION}"

  patch -p1 < ../patches/libyaml-0.2.5.patch

  if [ "$(uname -m)" == "ppc64le" ]; then
    cp "${BOSH_COMPILE_TARGET}"/config/config.{guess,sub} ./tool
  fi

  CFLAGS='-fPIC' ./configure --prefix="${BOSH_INSTALL_TARGET}" --disable-shared
  make
  make install
)

tar xzf "ruby-${RUBY_VERSION}.tar.gz"
(
  set -e
  cd "ruby-${RUBY_VERSION}"

  if [ "$(uname -m)" == "ppc64le" ]; then
    cp "${BOSH_COMPILE_TARGET}"/config/config.{guess,sub} ./tool
  fi

  LDFLAGS="-Wl,-rpath -Wl,${BOSH_INSTALL_TARGET}" CFLAGS='-fPIC' ./configure --prefix="${BOSH_INSTALL_TARGET}" --disable-install-doc --with-opt-dir="${BOSH_INSTALL_TARGET}" --without-gmp $with_openssl_dir
  make
  make install
)

mkdir "${BOSH_INSTALL_TARGET}/bosh"
cp gemrc "${BOSH_INSTALL_TARGET}/bosh/gemrc"

export PACKAGE_NAME="$(basename ${BOSH_INSTALL_TARGET})"
sed "s#\${PACKAGE_NAME}#${PACKAGE_NAME}#" compile-3.1.env > "${BOSH_INSTALL_TARGET}/bosh/compile.env"
sed "s#\${PACKAGE_NAME}#${PACKAGE_NAME}#" runtime-3.1.env > "${BOSH_INSTALL_TARGET}/bosh/runtime.env"

source "${BOSH_INSTALL_TARGET}/bosh/runtime.env"

if [ "$(gem --version)" != "${RUBYGEMS_VERSION}" ]; then
  echo "Installing rubygems " "${RUBYGEMS_VERSION}"
  tar zxvf "rubygems-${RUBYGEMS_VERSION}.tgz"
  (
    set -e
    cd "rubygems-${RUBYGEMS_VERSION}"

    if ! ruby setup.rb --no-ri --no-rdoc; then
      echo "Cannot install rubygems"
      exit 1
    fi
  )
fi

# We need to replace the shebang in the default binstubs generated by rubygems.
# As of rubygems 2.7.6 and ruby 2.4.4 they fixed a vulnerability with regards
# to path traversal and symlinks. The resulting fix uses the real path for the
# shebang which includes a checksum that is not constant across BOSH vms.  See
# https://blog.rubygems.org/2018/02/15/2.7.6-released.html for more details.
ruby overwrite_shebang.rb "${BOSH_INSTALL_TARGET}/bin/gem"
ruby overwrite_shebang.rb "${BOSH_INSTALL_TARGET}/bin/bundle"
